115 "CS 367, Fall 2013 Programming Assignment 2" "p2" "gradeReport.html"
0 0 g "General Issues"
  1 115 gx "No work submitted"
  1 115 gu "File contents unreadable"
  1 5 ge "Extra file(s) submitted (e.g., *.class) [-1/extra file]"
  1 5 gdb "Debugging statements printed - remove from future programs before submitting"
0 30 ll "CircularLinkedList class" "For this section, look at the section of Output.txt labeled 'Running Tests'. Make deductions for those issues printed. In the 'instructions' for each are listed what will be printed if the student has that issue." 
  1 30 cllx1 "Does not compile due to major or many minor errors"
  1 8 cllx2 "Does not compile due to minor error(s), which we fixed (-2/error)"
  1 6 cllfn "File name incorrect - should be CircularLinkedList.java"
  1 6 cllcn "Class name doesn't match file name - should be CircularLinkedList"
  1 3 clli "CircularLinkedList class should implement CircularListADT interface"
  1 6 clla "add(item)"
    2 6 cllax "Missing"
    2 4 clla1 "Doesn't add in front of current positin" "'add method adds items in wrong order'"
    2 4 clla2 "Doesn't add if list is empty" "'add(item) method incorrect when list empty'"
    2 3 clla3 "Threw unexpected exception"
  1 6 cllrm "remove()"
    2 6 cllrmx "Missing"
    2 4 cllrm1 "Doesn't remove correct node"
    2 2 cllrm2 "Doesn't return data from line removed" "'remove returns incorrect item for nonempty list'"
    2 2 cllrm3 "Doesn't throw ElementNotFoundException if empty" "'remove method (did not throw/threw wrong) exception for empty list'"
  1 3 cllie "isEmpty()"
    2 3 clliex "Missing"
    2 2 cllie1 "Doesn't return false if list is not empty" "'isEmpty incorrect for list with (one/many) item(s)'"
    2 2 cllie2 "Doesn't return true if list is empty" "'isEmpty incorrect for empty list'"
  1 3 cllsz "size()"
    2 3 cllszx "Missing"
    2 2 cllsz1 "Doesn't return 0 for empty list" "'size method incorrect for empty list'"
    2 2 cllsz2 "Doesn't update correctly when adding/removing elements" "'size method incorrect for list with (1/many) item(s)'"
  1 6 cllgt "get(offset)"
    2 6 cllgtx "Missing"
    2 2 cllgt1 "Doesn't throw ElementNotFoundException if list is empty" "'get method (did not throw/threw wrong) exception for empty list'"
    2 2 cllgt2 "Doesn't return correct line" "also if they return null instead of data"
  1 6 llap "setCurrentPosition(offset)"
    2 6 cllscpx "Missing"
    2 4 cllscp1 "Doesn't move the current to the correct offset"
    2 2 cllscp2 "Doesn't handle negative offset"
    2 3 cllscp3 "Threw unexpected exception"
  1 6 llap "print(offset)"
    2 6 cllpx "Missing"
    2 4 cllp1 "Offset missing or not used"
    2 2 cllp2 "Incorrectly offsets or doesn't handle negative offsets"
    2 3 cllp3 "Prints to output stream instead of returning string."
    2 3 cllp4 "Threw unexpected exception"
0 50 app "JosephusMain class" "For this step, look at the section of Output.txt labeled 'Student's Output' and compare it with CorrectOutput.txt"
  1 50 appx1 "Does not compile due to major or many minor errors"
  1 25 appx2 "Program crashed immediately or failed to run"
  1 15 appx3 "Does not compile due to minor error(s), which we fixed (-3/error)"
  1 10 appx4 "Crashed due to a minor bug, which we fixed (-2/bug)"
  1 5 appx5 "Crashed during test"
  1 3 appfn "File name incorrect - should be JosephusMain.java"
  1 3 appcn "Class name doesn't match file name - should be JosephusMain"
  1 4 appout1 "Output format not as specified" "i.e., if they print extra info, or fail to print some things"
  1 8 appci "Command Line Input"
    2 8 appcix "No code to handle this."
    2 6 appci1 "Fails to open file specified"
    2 4 appci2 "Inserts items in incorrect order."
    2 6 appci3 "Does not insert every name from the list."
  1 8 appa "Command option 'a'"
    2 8 appax "No code for this option"
    2 5 appa1 "Doesn't add the specified person to the list"
    2 5 appa2 "Adds the person at the incorrect position"
    2 4 appa3 "Does not set current position to the correct location"
  1 5 appp "Command option 'p'"
    2 5 apppx "No code for this option"
    2 2 appp1 "Does not start from the current position."
    2 2 appp2 "Doesn't print all contents of circular linked list"
  1 20 appr "Command option 'r'"
    2 20 apprx "No code for this option"
    2 2 appr1 "Doesn't print out messages stating when cycles are started/stopped"
    2 4 appr2 "Doesn't print out the number of people remaining alive."
    2 2 appr3 "Incorrect format for print statements."
    2 5 appr4 "Does not remove the correct number of people each cycle."
    2 5 appr5 "Does not run for the correct number of cycles."
    2 5 appr6 "Does not remove from the correct position." "'This would include if they don't start counting from the current position.'"
    2 5 appr7 "Incorrectly handles running backwards."
    2 4 appr8 "Cannot handle correctly inputted commands" "'Fails to recognize 'f', 'forward', 'b', or 'backwards'. Or fails to run if stepSize or #ofCycles is within the correct range.'"
  1 5 appex "Command option 'x'"
    2 5 appux "No code for this option"
    2 1 appu1 "Doesn't end program"
0 5 exc "ElementNotFoundException class" "For this section, review the student's code."
  1 5 excx1 "Does not compile due to major or many minor errors"
  1 1 excx2 "Does not compile due to minor error(s), which we fixed (-2/error)"
  1 3 excfn "File name incorrect - should be ElementNotFoundException.java"
  1 3 exccn "Class name doesn't match file name - should be ElementNotFoundException"
  1 5 exce "ElementNotFoundException class should extend Exception"
0 10 d "Program design" "View the student's code, make deductions as necessary."
  1 5 d1 "CircularListADT or ListNode class modified"
  1 2 d2 "Additional public methods/constructors added to CircularLinkedList"
  1 10 d3 "CircularLinkedList should not use an array or ArrayList to store nodes"
  1 3 d4 "JosephusMain has code that should be done by CircularLinkedList"
  1 3 d6 "JosephusMain should do console output (not CircularLinkedList)"
  1 3 d7 "JosephusMain should do the code specific to the application (not CircularLinkedList)"
  1 5 d8 "Excessive/unnecessary additional classes"
  1 2 d9 "All data members should be <b>private</b> for this assignment and should not be accessed directly outside the class they were declared in"
0 10 s "Style" "View the student's code, make deductions as necessary."
  1 1 s1 "Use symbolic constants where appropriate"
  1 2 s2 "Use one of the standard forms for placing braces"
  1 1 s3 "Use more vertical whitespace (blank lines)"
  1 1 s4 "Use more horizontal whitespace (spaces/tabs within a line)"
  1 1 s5 "Use shorter line lengths"
  1 2 s6 "Indent to show level of nesting"
  1 2 s7 "Follow naming conventions"
    2 1 s7s1 "Needlessly long variable names"
    2 1 s7s2 "Needlessly short variable names (c,i,g, etc.)"
    2 1 s7s3 "Use descriptive names"
0 10 c "Commenting" "View the student's code, make deductions as necessary."
  1 10 cx "Trivial or no comments - review commenting guide"
  1 1 cl "Put longer comments above a line of code, not at the end of it"
  1 1 cj "Use javadoc style /** ... */ comments instead of // comments for headers"
  1 1 cF "Missing/incomplete FILE header comments - put at beginning of every file"
  1 1 cC "Missing/incomplete CLASS header comments - every class should have one"
  1 5 cM "Missing/incomplete METHOD header comments - every method should have one"
    2 5 cMs1 "Some method headers don't correctly describe their purposes" "deduct proportionally"
    2 1 cMs2 "Method headers should explain their arguments, not just list them"
  1 1 cV "Missing/incomplete VARIABLE declaration comments - list purpose and range of legal values for each non-trivial variable"
  1 2 cm "Missing/incomplete comments within methods"
    2 1 cms1 "List main steps of method's algorithm when they're not obvious"
    2 1 cms2 "Explain confusing/convoluted code"
    2 1 cms3 "Avoid excessive commenting"
