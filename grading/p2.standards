115 "CS 367, Spring 2013 Programming Assignment 2" "p2" "gradeReport.html"
0 0 g "General Issues"
  1 115 gx "No work submitted"
  1 115 gu "File contents unreadable"
  1 5 ge "Extra file(s) submitted (e.g., *.class) [-1/extra file]"
  1 11 glp1 "10% penalty - 1 day late, no free days remaining"
  1 22 glp2 "20% penalty - 2 days late, no free days remaining"
  1 33 glp3 "30% penalty - 3 days late, no free days remaining"
  1 5 gdb "Debugging statements printed - remove from future programs before submitting"
0 30 ll "LinkedList class" "For this section, look at the section of Output.txt labeled 'Running Tests'. Make deductions for those issues printed. In the 'instructions' for each are listed what will be printed if the student has that issue." 
  1 30 llx1 "Does not compile due to major or many minor errors"
  1 8 llx2 "Does not compile due to minor error(s), which we fixed (-2/error)"
  1 6 llfn "File name incorrect - should be LinkedList.java"
  1 6 llcn "Class name doesn't match file name - should be LinkedList"
  1 3 lli "LinkedList class should implement ListADT interface"
  1 6 llae "add(item)"
    2 6 llaex "Missing"
    2 4 llae1 "Doesn't add to the end of the list" "'add method adds items in wrong order'"
    2 4 llae2 "Doesn't add if list is empty" "'add(item) method incorrect when list empty'"
    2 3 llae3 "Threw unexpected exception"
  1 6 llap "add(pos, item)"
    2 6 llapx "Missing"
    2 1 llap1 "Doesn't throw InvalidListPositionException if pos is out of bounds" "'add(pos, item) method (did not throw/threw wrong) exception for (too large/negative) position'"
    2 4 llap2 "Doesn't add item to end of list" "'add(pos, item) method adds items in wrong order'"
	2 3 llap3 "Threw unexpected exception"
  1 6 llrm "remove(pos)"
    2 6 llrmx "Missing"
    2 4 llrm1 "Doesn't remove correct line#"
    2 2 llrm2 "Doesn't return data from line removed" "'remove returns incorrect item for nonempty list'"
    2 2 llrm3 "Doesn't throw InvalidListPositionException if pos is out of bounds" "'remove method (did not throw/threw wrong) exception for (too large/negative) position'"
    2 3 llrm4 "Throws exception for large list" "'remove method threw exception for list with many items'" 
  1 3 llie "isEmpty()"
    2 3 lliex "Missing"
    2 2 llie1 "Doesn't return false if list is not empty" "'isEmpty incorrect for list with (one/many) item(s)'"
    2 2 llie2 "Doesn't return true if list is empty" "'isEmpty incorrect for empty list'"
  1 3 llsz "size()"
    2 3 llszx "Missing"
    2 2 llsz1 "Doesn't return 0 for empty list" "'size method incorrect for empty list'"
    2 2 llsz2 "Doesn't update correctly when adding/removing elements" "'size method incorrect for list with (1/many) item(s)'"
  1 6 llgt "get()"
    2 6 llgtx "Missing"
    2 2 llgt1 "Doesn't throw InvalidListPositionException if pos it out of bounds" "'get method (did not throw/threw wrong) exception for (too large/negative) position'"
    2 2 llgt2 "Doesn't return correct line" "also if they return null instead of line.getData"
0 50 app "MovieQueueMain class" "For this step, look at the section of Output.txt labeled 'Student's Output' and compare it with CorrectOutput.txt"
  1 50 appx1 "Does not compile due to major or many minor errors"
  1 25 appx2 "Program crashed immediately or failed to run"
  1 15 appx3 "Does not compile due to minor error(s), which we fixed (-3/error)"
  1 10 appx4 "Crashed due to a minor bug, which we fixed (-2/bug)"
  1 5 appx5 "Crashed during test"
  1 3 appfn "File name incorrect - should be MovieQueueMain.java"
  1 3 appcn "Class name doesn't match file name - should be MovieQueueMain"
  1 4 appout1 "Output format not as specified" "i.e., if they print extra info, or fail to print some things"
  1 3 appout3 "Do not display debug information in submitted code"
  1 8 appa "Command option 'a'"
    2 8 appax "No code for this option"
	2 5 appa1 "Doesn't print/Incorrectly prints file contents" "should list movies in same order as in file"
	2 2 appa2 "Doesn't print line numbers with file contents"
	2 5 appa3 "Doesn't prompt/Incorrectly prompts for line number to add"
	2 5 appa4 "Doesn't add the specified line number to the queue"
	2 2 appa6 "Doesn't prompt again for line number after invalid entry"
	2 3 appa7 "Throws exception if line number is invalid"
	2 2 appa5 "Incorrect line number indexing" "should start at 1, not 0"
  1 6 appu "Command option 'c'"
    2 6 appux "No code for this option"
    2 1 appu1 "Doesn't display 'Copied title to end of queue'" "doesn't have to be exact"
    2 4 appu2 "Doesn't copy the correct line#" "first 'c' command should copy 'The Help'"
    2 4 appu3 "Doesn't copy the line to the end of the list" "if they copy to the second-to-last, or similar"
    2 2 appu4 "Doesn't print 'Invalid line number' for an invalid/non-integer" "deduct 3 points if exception is thrown, otherwise 1"
  1 8 appl "Command option 'l'"
    2 8 applx "No code for this option"
    2 5 appl1 "Doesn't print/Incorrectly prints file contents" "should list letters of alphabet in order, 1 A to 26 Z"
    2 2 appl2 "Doesn't print line numbers with file contents"
    2 5 appl3 "Contents are printed but not added to list"
    2 2 appl4 "Doesn't clear list before loading new file" "view code"
  1 6 appu "Command option 'm'"
    2 6 appux "No code for this option"
    2 1 appu1 "Doesn't display 'Moved title to front of queue'"
    2 4 appu2 "Doesn't move the correct line#" "first 'm' command should move 'Iron Man', second 'Top Gun'"
    2 4 appu3 "Doesn't move the line to the front of the list" "if they move to the second line, or similar"
    2 2 appu4 "Doesn't print 'Invalid line number' for an invalid/non-integer" "deduct 3 points if exception is thrown, otherwise 1"
  1 5 appp "Command option 'p'"
    2 5 apppx "No code for this option"
    2 2 appp1 "Doesn't print line numbers"
    2 2 appp2 "Doesn't print all contents of list" "i.e., if they miss the first or last line"
  1 6 appr "Command option 'r'"
    2 6 apprx "No code for this option"
    2 1 appr1 "Doesn't print 'Removed title from queue'"
    2 6 appr2 "Doesn't remove line from list" "after 'Removed The Help' queue should have one 'The Help' at line 5, not line 3"
    2 6 appr3 "Replaces line with null"
    2 2 appr4 "Doesn't print 'Invalid line number' for invalid/non-integer" 'deduct 3 points if exception is thrown, otherwise 1'
  1 8 apps "Command option 's'" "Look at the file 'myQueue.txt' in the student's folder, it should be the same as the queue printed in CorrectOutput.txt right before 'Saved.'"
    2 8 appsx "Missing"
    2 1 apps1 "Doesn't display 'Saved.'"
    2 8 apps2 "File is empty" "Look in their code, if this is because they forgot to close the file, only take off 2 points"
    2 2 apps3 "Hard-coded file name" "Look in their folder for a different text file"
    2 4 apps5 "Missing lines in file" "i.e., first or last line doesn't get printed, they only print every other line, etc."
	2 2 apps6 "Doesn't print 'Cannot write to file, movie queue is empty' for empty queue" "1 point for similar"
	2 2 apps7 "Creates empty file when movie queue is empty" "Check folder for a file called 'emptyFile.txt'"
  1 5 appu "Command option 'w'"
    2 5 appux "No code for this option"
    2 1 appu1 "Doesn't display 'Removed first X movies from queue'"
    2 5 appu2 "Doesn't remove any movies from queue"
    2 3 appu3 "Doesn't remove all movies if 'amount' is greater than the queue size" "3 points if exception is thrown, otherwise 2"
    2 2 appu4 "Doesn't print 'Invalid number of movies' for an invalid/non-integer"
0 5 exc "InvalidListPositionException class" "For this section, review the student's code."
  1 5 excx1 "Does not compile due to major or many minor errors"
  1 1 excx2 "Does not compile due to minor error(s), which we fixed (-2/error)"
  1 3 excfn "File name incorrect - should be InvalidListPositionException.cpp"
  1 3 exccn "Class name doesn't match file name - should be InvalidListPositionException"
  1 5 exce "InvalidListPositionException class should extend Exception" "if they implement Throwable, or extend RuntimeException, only deduct 3 pts"
0 10 d "Program design" "View the student's code, make deductions as necessary."
  1 5 d1 "ListADT or ListNode class modified"
  1 2 d2 "Additional public methods/constructors added to LinkedList"
  1 10 d3 "LinkedList should not use an array or ArrayList to store nodes"
  1 3 d4 "MovieQueueMain has code that should be done by LinkedList"
  1 3 d6 "MovieQueueMain should do console output (not LinkedList)"
  1 3 d7 "MovieQueueMain should do the code specific to the application (not LinkedList)"
  1 5 d8 "Excessive/unnecessary additional classes"
  1 2 d9 "All data members should be <b>private</b> for this assignment and should not be accessed directly outside the class they were declared in"
0 10 s "Style" "View the student's code, make deductions as necessary."
  1 1 s1 "Use symbolic constants where appropriate"
  1 2 s2 "Use one of the standard forms for placing braces"
  1 1 s3 "Use more vertical whitespace (blank lines)"
  1 1 s4 "Use more horizontal whitespace (spaces/tabs within a line)"
  1 1 s5 "Use shorter line lengths"
  1 2 s6 "Indent to show level of nesting"
  1 2 s7 "Follow naming conventions"
    2 1 s7s1 "Needlessly long variable names"
    2 1 s7s2 "Needlessly short variable names (c,i,g, etc.)"
    2 1 s7s3 "Use descriptive names"
0 10 c "Commenting" "View the student's code, make deductions as necessary."
  1 10 cx "Trivial or no comments - review commenting guide"
  1 1 cl "Put longer comments above a line of code, not at the end of it"
  1 1 cj "Use javadoc style /** ... */ comments instead of // comments for headers"
  1 1 cF "Missing/incomplete FILE header comments - put at beginning of every file"
  1 1 cC "Missing/incomplete CLASS header comments - every class should have one"
  1 5 cM "Missing/incomplete METHOD header comments - every method should have one"
    2 5 cMs1 "Some method headers don't correctly describe their purposes" "deduct proportionally"
    2 1 cMs2 "Method headers should explain their arguments, not just list them"
  1 1 cV "Missing/incomplete VARIABLE declaration comments - list purpose and range of legal values for each non-trivial variable"
  1 2 cm "Missing/incomplete comments within methods"
    2 1 cms1 "List main steps of method's algorithm when they're not obvious"
    2 1 cms2 "Explain confusing/convoluted code"
    2 1 cms3 "Avoid excessive commenting"
